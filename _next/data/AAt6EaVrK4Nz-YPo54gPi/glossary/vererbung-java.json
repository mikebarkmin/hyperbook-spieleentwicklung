{"pageProps":{"locale":"de","markdown":"\nDie Vererbungsbeziehung wird in Java mit dem Schl√ºsselwort extends beschrieben. Beispiel:\n\n```mermaid\nclassDiagram\n    Person <|-- Mitarbeiter\n    class Person {\n        -name: String\n        +setzeName(pName: String)\n        +gibName(): String\n    }\n    class Mitarbeiter {\n\n    }\n```\n\n::::tabs{id=\"111\"}\n\n:::tab{title=\"Person.java\" id=\"1\"}\n\n```java\npublic class Person {\n    private String name;\n    public void setzeName(String pName) {\n        name = pName;\n    }\n    public String gibName() {\n        return name;\n    }\n}\n```\n\n:::\n\n:::tab{title=\"Mitarbeiter.java\" id=\"2\"}\n\n```java\npublic class Mitarbeiter extends Person {\n    int mitarbeiterNummer\n\n    public Mitarbeiter() {\n        mitarbeiterNummer = 1;\n    }\n}\n```\n\n:::\n\n::::\n\n\n\nDie Klasse Mitarbeiter ist eine Spezialisierung der Klasse Person. Sie erbt die √∂ffentlichen Attribute und Methoden der Klasse Person. \n\nOberklassen vererben √∂ffentliche (public, protected) Methoden und Attribute an Unterklassen. Das hei√üt, dass sie wie eigene Attribute verwendet werden k√∂nnen.\n\nDas hei√üt auf Objekte der Klasse Mitarbeiter kann zum Beispiel die Methode setzeName aufgerufen werden.\n\n```java\nMitarbeiter meinMitarbeiter = new Mitarbeiter();\nmeinMitarbeiter.setzeName(\"Paul\");\n```\n\nAlle Klassen in Java erben direkt oder indirekt von der Java Basisklasse Object. Wird bei einer Klassendeklaration keine extends Klausel angegeben so wird die Klasse automatisch von der Klasse Object abgeleitet.\n\n# Pr√ºfe dich\n\nGegeben sind die folgenden beiden Klassen. Beantworte die nachstehenden Fragen.\n\n::::tabs{id=\"112\"}\n\n:::tab{title=\"Fahrzeug.java\" id=\"1\"}\n\n```java\npublic class Fahrzeug {\n    private Color farbe;\n    public float geschwindigkeit;\n\n    public void setzeFarbe(Color neueFarbe) {\n        farbe = neueFarbe;\n    }\n    public Color gibFarbe() {\n        return farbe;\n    }\n}\n```\n\n:::\n\n:::tab{title=\"PKW.java\" id=\"2\"}\n\n```java\npublic class PKW extends Fahrzeug {\n    private boolean hatKofferraum;\n\n    public PKW(boolean pHatKofferraum) {\n        hatKofferraum = pHatKofferraum;\n    }\n}\n```\n\n:::\n\n::::\n\n1. √úberpr√ºfe, ob der folgende Quelltext g√ºltig ist.\n\n```java\nPKW kleinesAuto = new PKW(true);\nkleinesAuto.farbe;\n```\n\n:::collapsible{title=\"L√∂sung\" id=\"5\"}\nNein! Das Attribut farbe ist **private** und somit nicht aus Unterklassen erreichbar.\n:::\n\n2. √úberpr√ºfe, ob der folgende Quelltext g√ºltig ist.\n\n```java\nPKW kleinesAuto = new PKW(true);\nkleinesAuto.geschwindigkeit;\n```\n\n:::collapsible{title=\"L√∂sung\" id=\"4\"}\nJa! Das Attribut geschwindigkeit der Klasse Fahrzeug ist public und wird somit an die Unterklasse PKW vererbt. Daher kann auf das Attribut zugegriffen werden.\n:::\n\n3. √úberpr√ºfe, ob der folgende Quelltext g√ºltig ist.\n\n```java\nPKW kleinesAuto = new PKW(true);\nkleinesAuto.gibFarbe();\n```\n\n:::collapsible{title=\"L√∂sung\" id=\"3\"}\nJa! Die Methode gibFarbe der Klasse Fahrzeug ist public und wird somit an die Unterklasse vererbt. Daher kann auf die Methode zugegriffen werden.\n:::\n\n4. √úberpr√ºfe, ob der folgende Quelltext g√ºltig ist.\n\n```java\nPKW kleinesAuto = new PKW(true);\nkleinesAuto.hatKofferraum;\n```\n\n:::collapsible{title=\"L√∂sung\" id=\"2\"}\nNein! Das Attribut hatKofferraum ist private und somit nicht au√üerhalb der Klasse PKW verf√ºgbar.\n:::\n\n5. √úberpr√ºfe, ob der folgende Quelltext g√ºltig ist.\n\n```java\nFahrzeug kleinesAuto = new Fahrzeug();\nkleinesAuto.hatKofferraum;\n```\n\n:::collapsible{title=\"L√∂sung\" id=\"1\"}\nNein! Das Attribut hatKofferraum ist nur in der Klasse PKW verf√ºgbar, da PKW eine Unterklasse von Fahrzeug ist. \n:::","data":{"name":"Verebung Java"},"references":[{"folder":"book","path":{"directory":"erste-implementierung","absolute":"/home/runner/work/hyperbook-spieleentwicklung/hyperbook-spieleentwicklung/.hyperbook/book/erste-implementierung/weitere-klassen.md","relative":"erste-implementierung/weitere-klassen.md","href":"/erste-implementierung/weitere-klassen"},"extension":".md","name":"weitere-klassen","root":"/home/runner/work/hyperbook-spieleentwicklung/hyperbook-spieleentwicklung/.hyperbook","markdown":{"content":"\n# Weitere Klassen\n\nUnser Spiel besteht im Moment aus zwei Klassen. Im Laufe dieser Seite wollen wir weitere Klassen implementieren und die folgende Ausgabe erreichen.\n\n![](/assets/weitere-klassen/ausgabe.png)\n\n## Aufgaben\n\n### Klassen implementieren\n\nSetze das folgende :t[UML-Klassendiagramm]{#klassendiagramm} im BlueJ-Projekt um. Die Klassen **Sprite** und **Stage** stammen aus der **Scratch for Java** Bibliothek. Die Klassen **Sprite** und **Stage** haben eine Vielzahl von Methoden, die den Bl√∂cken in Scratch √§hneln. Wir werden diese nach und nach kennenlernen. Im Klassendiagramm werden nur im Moment relevante dargestellt, damit es √ºbersichtlich bleibt.\n\n```mermaid\nclassDiagram\n    Stage <|-- BunnyHop\n    Sprite <|-- Spieler\n    Sprite <|-- Feind\n    Sprite <|-- Plattform\n    Feind <|-- StachelFeind\n\n    class Stage {\n        Stage(width: int, height: int)\n        add(sprite: Sprite)\n        remove(sprite: Sprite)\n        setColor(r: int, g: int, b: int)\n        addBackdrop(name: String, filePath: String)\n        switchBackdrop(name: String)\n        nextBackdrop()\n    }\n\n    class BunnyHop {\n        Spieler bugs\n        StachelFeind ingo\n        Plattform p1\n        Plattform p2\n        Plattform p3\n        Plattform p4\n    }\n\n    class Sprite {\n        getX(): float\n        getY(): float\n        setX(x: float)\n        setY(y: float)\n        setPosition(x: float, y: float)\n        changeX(x: float)\n        changeY(y: float)\n        setSize(percentage: float)\n        move(steps: float)\n        setDirection(direction: float)\n        turnLeft(amount: float)\n        turnRight(amount: float)\n        addCostume(name: String, filePath: String)\n        switchCostume(name: String)\n        nextCostume()\n    }\n\n    class Spieler {\n    }\n\n    class Plattform {\n        istKaputt: boolean\n    }\n\n    class Feind {\n    }\n\n    class StachelFeind {\n    }\n```\n\n:::alert{info}\nWenn du dir nicht sicher bist wie man das Klassendiagramm in Java umsetzen kann, dann orientiere dich an der Klasse Spieler oder schaue hier: :t[Vererbung in Java]{#vererbung-java}\n:::\n\n### Ausgabe nachstellen\n\nDa wir nun alle notwendigen Klassen zur Verf√ºgung haben, k√∂nnen wir jetzt die Klasse **BunnyHop** so ver√§ndern, dass sie der obigen Ausgabe entspricht.\n\nModifiziere die Klasse **BunnyHop** so, dass sie der obigen Ausgabe entspricht.\n\nSetze dazu die Gr√∂√üe der Stage BunnyHop auf 800x400 (`super(800, 400)`) und nutze die folgenden Objektdiagramme:\n\n::excalidraw{src=\"/assets/weitere-klassen/object-diagram.excalidraw\" aspectRatio=\"4/3\" autoZoom=true center=true}\n\n\n\n:::collapsible{title=\"Tipp: Position\" id=\"tipp-1\"}\nMit den Methoden [**setX**](https://scratch4j.openpatch.org/reference/sprite/motion/setX), [**setY**](https://scratch4j.openpatch.org/reference/sprite/motion/setY), [**setPosition**](https://scratch4j.openpatch.org/reference/sprite/motion/setPosition) kannst du die Position von Objekten der Klasse Sprite ver√§ndern.\n:::\n\n:::collapsible{title=\"Tipp: Koordinaten\" id=\"tipp-2\"}\nFalls du Hilfe bzgl. der Koordinaten brauchst, kannst du im Konstruktor der **BunnyHop**-Klasse die Methode `this.setDebug(true)` aufrufen.\n:::\n\n### L√∂sung\n\n::archive[Projekt Weitere Klassen.zip]{name=\"bugs-weitere-klassen\"}\n","data":{"name":"Weitere Klassen","lang":"de","index":1}}},{"folder":"book","path":{"directory":"euer-spiel/epics","absolute":"/home/runner/work/hyperbook-spieleentwicklung/hyperbook-spieleentwicklung/.hyperbook/book/euer-spiel/epics/tag-nacht.md","relative":"euer-spiel/epics/tag-nacht.md","href":"/euer-spiel/epics/tag-nacht"},"extension":".md","name":"tag-nacht","root":"/home/runner/work/hyperbook-spieleentwicklung/hyperbook-spieleentwicklung/.hyperbook","markdown":{"content":"\n# Epic: Tag und Nacht\n\n:::collapsible{title=\"Hilfe: Globale Eigenschaft\" id=\"536496\"}\n\nOb Tag ist, kannst du dir am besten als :t[Attribut]{#attribut} in deiner Level-Klasse speichern. Definiere einen :t[Getter]{#vererbung-java} und schon k√∂nnen alle Objekte, die die :t[Klasse]{#klasse} kennen darauf zugreifen.\n\n```java\nprivate boolean tag = false;\n\npublic boolean istTag() {\n    return tag;\n}\n```\n\n:::\n\n:::collapsible{title=\"Hilfe: Tag abh√§ngig von der Zeit\" id=\"303419\"}\n\nMit einem Timer k√∂nnen f√ºr alle paar Sekunden unterschiedliche Anweisungen ausf√ºhren.\n\n```java\nif (this.getTimer().interalMillis(6000, 4000)) {\n    // 6 Sekunden ist Tag\n} else {\n    // 4 Sekunden ist Nacht\n}\n```\n\n:::\n\n:::collapsible{title=\"Hilfe: Beispiel Implementierung\" id=\"9672143\"}\n\n::archive[Beispiel Implementierung]{name=\"epic-tag-und-nacht\"}\n\n:::","data":{"name":"ü•â Tag und Nacht"}}}],"navigation":{"next":{"name":"Einf√ºhrung","index":0,"href":"/"},"current":null,"previous":null,"sections":[{"name":"Erste Modellierungen","index":1,"isEmpty":true,"pages":[{"name":"üñä Erste Modellierung von Klassen","index":2,"lang":"de","href":"/erste-modellierung/erste-modellierung-von-klassen"},{"name":"üìÉ Der Game Loop","index":3,"lang":"de","href":"/erste-modellierung/der-game-loop"},{"name":"üñä Erste Modellierung des Game Loops","index":4,"lang":"de","href":"/erste-modellierung/erste-modellierung-game-loop"},{"name":"üìÉ Zustandsdiagramme zur Modellierung von Spielobjekten","index":5,"lang":"de","href":"/erste-modellierung/zustandsdiagramme-zur-modellierung-von-spielobjekte"},{"name":"üñä Zustandsdiagramm f√ºr Bugs","index":6,"lang":"de","href":"/erste-modellierung/zustandsdiagramm-fuer-bugs"}],"sections":[],"href":"/erste-modellierung"},{"name":"Erste Implementierung","index":2,"isEmpty":true,"pages":[{"name":"Vorbereitung","index":0,"lang":"de","href":"/erste-implementierung/vorbereitung"},{"name":"Weitere Klassen","lang":"de","index":1,"href":"/erste-implementierung/weitere-klassen"},{"name":"Alles bewegt sich","index":2,"lang":"de","href":"/erste-implementierung/alles-bewegt-sich"},{"name":"Bugs lernt springen","index":3,"lang":"de","href":"/erste-implementierung/bugs-lernt-springen"},{"name":"Bugs tut sich weh","index":4,"lang":"de","href":"/erste-implementierung/bugs-tut-sich-weh"},{"name":"Ein Apfel fiel vom Baum","index":5,"lang":"de","href":"/erste-implementierung/ein-apfel-fiel-vom-baum"},{"name":"Alles kommt wieder","index":6,"lang":"de","href":"/erste-implementierung/alles-kommt-wieder"}],"sections":[],"href":"/erste-implementierung"},{"name":"Euer Spiel","index":2,"isEmpty":true,"pages":[{"name":"Ideen sammeln","index":0,"href":"/euer-spiel/ideen-sammeln"},{"name":"Scrum","index":0,"lang":"de","href":"/euer-spiel/scrum"}],"sections":[{"name":"Hilfen f√ºr Epics","isEmpty":true,"pages":[{"name":"Angriff","hide":true,"href":"/euer-spiel/epics/angriff"},{"name":"Bestenliste","hide":true,"href":"/euer-spiel/epics/highscore"},{"name":"Ebenen","hide":true,"href":"/euer-spiel/epics/ebenen"},{"name":"Gegenst√§nde","hide":true,"href":"/euer-spiel/epics/items"},{"name":"Leben","hide":true,"href":"/euer-spiel/epics/leben"},{"name":"M√ºnzen","hide":true,"href":"/euer-spiel/epics/muenzen"},{"name":"Portal","hide":true,"href":"/euer-spiel/epics/portal"},{"name":"Shop","hide":true,"href":"/euer-spiel/epics/shop"},{"name":"ü•á Ausweichen (Dodge)","lang":"de","href":"/euer-spiel/epics/dodge"},{"name":"ü•à Animierter Hintergrund","lang":"de","href":"/euer-spiel/epics/animierter-hintergrund"},{"name":"ü•à Hintergrundobjekte","lang":"de","href":"/euer-spiel/epics/hintergrund-objekte"},{"name":"ü•à Pause","href":"/euer-spiel/epics/pause"},{"name":"ü•â L√ºcken","href":"/euer-spiel/epics/luecken"},{"name":"ü•â Schneller mit der Zeit","href":"/euer-spiel/epics/schneller-mit-der-zeit"},{"name":"ü•â Sound","href":"/euer-spiel/epics/sound"},{"name":"ü•â Startbildschirm","href":"/euer-spiel/epics/startbildschirm"},{"name":"ü•â Tag und Nacht","href":"/euer-spiel/epics/tag-nacht"}],"sections":[],"href":"/euer-spiel/epics"}],"href":"/euer-spiel"}],"pages":[{"name":"Einf√ºhrung","index":0,"href":"/"},{"name":"üìÉ Die Spielidee","index":1,"href":"/die-spielidee"}]}},"__N_SSG":true}